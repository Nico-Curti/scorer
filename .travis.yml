language: cpp

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.9.0


matrix:
  fast_finish: true
  include:
# linux + gcc
    - os: linux
      compiler: gcc
      python: "2.6"
      name: ubuntu 14.04 - native gcc - python 2.6
      env:
        - MATRIX_EVAL=""
        - COMPILER_ID="native-gcc"
        - PYTHON=2.6

    - os: linux
      compiler: gcc
      python: "2.7"
      name: ubuntu 14.04 - gcc@5.0 - python 2.7
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
        - COMPILER_ID="gcc"
        - PYTHON=2.7

    - os: linux
      compiler: gcc
      python: "3.3"
      name: ubuntu 14.04 - gcc@6.0 - python 3.3
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
        - COMPILER_ID="gcc"
        - PYTHON=3.3

    - os: linux
      compiler: gcc
      python: "3.4"
      name: ubuntu 14.04 - gcc@7.0 - python 3.4
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - COMPILER_ID="gcc"
        - PYTHON=3.4

    - os: linux
      compiler: gcc
      python: "3.5"
      name: ubuntu 14.04 - gcc@8.0 - python 3.5
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - COMPILER_ID="gcc"
        - PYTHON=3.5

    - os: linux
      compiler: gcc
      python: "3.6"
      name: ubuntu 14.04 - gcc@8.0 - python 3.6
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - COMPILER_ID="gcc"
        - PYTHON=3.6

# linux + clang

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@3.9
      addons:
        apt:
          update: true
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
            - libc++-dev
            - libc++abi-dev
            - libclang-3.9-dev
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
        - CMAKE_C_COMPILER=${CC}
        - CMAKE_CXX_COMPILER=${CXX}
        - CMAKE_LINKER=${CXX}
        - COMPILER_ID="clang"
        - LLVM_VERSION=3.9.0

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@4.0
      addons:
        apt:
          update: true
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
            - libstdc++-4.8-dev
            - libclang-4.0-dev

      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
        - CMAKE_C_COMPILER=${CC}
        - CMAKE_CXX_COMPILER=${CXX}
        - CMAKE_LINKER=${CXX}
        - COMPILER_ID="clang"
        - LLVM_VERSION=4.0.0

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@5.0
      addons:
        apt:
          update: true
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
            - libstdc++-4.8-dev
            - libclang-5.0-dev

      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
        - CMAKE_C_COMPILER=${CC}
        - CMAKE_CXX_COMPILER=${CXX}
        - CMAKE_LINKER=${CXX}
        - COMPILER_ID="clang"
        - LLVM_VERSION=5.0.0

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@6.0
      addons:
        apt:
          update: true
          sources:
            - llvm-toolchain-trusty-6.0
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - clang-6.0
            - libstdc++6-4.4-dev
            - libclang-6.0-dev

      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
        - CMAKE_C_COMPILER=${CC}
        - CMAKE_CXX_COMPILER=${CXX}
        - CMAKE_LINKER=${CXX}
        - COMPILER_ID="clang"
        - LLVM_VERSION=6.0.0

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@7.0
      addons:
        apt:
          update: true
          sources:
            - llvm-toolchain-trusty-7.0
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - clang-7.0
            - libstdc++6-4.4-dev
            - libclang-7-dev

      env:
        - MATRIX_EVAL="CC=clang-7.0 && CXX=clang++-7.0"
        - CMAKE_C_COMPILER=${CC}
        - CMAKE_CXX_COMPILER=${CXX}
        - CMAKE_LINKER=${CXX}
        - COMPILER_ID="clang"
        - LLVM_VERSION=7.0.0

# osx + gcc

    - os: osx
      osx_image: xcode10.1
      compiler: gcc
      name: macOS - g++-7
      env:
        - MATRIX_EVAL="brew update && brew install gcc@7 gcc && CC=gcc-7 && CXX=g++-7"
        - COMPILER_ID="gcc"

    - os: osx
      osx_image: xcode10.1
      compiler: gcc
      name: macOS - g++-8
      env:
        - MATRIX_EVAL="brew update && brew install gcc@8 gcc && CC=gcc-8 && CXX=g++-8"
        - COMPILER_ID="gcc"

# osx + clang
    - os: osx
      osx_image: xcode10.1
      compiler: clang
      name: macOS - native clang (llvm backend)
      env:
        - MATRIX_EVAL=""
        - COMPILER_ID="clang"

    - os: osx
      osx_image: xcode10.1
      compiler: clang
      name: macOS - clang@7.0
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-7
          packages:
            - clang-7.0
            - python3.6
            - python3.6-dev
      env:
        - MATRIX_EVAL="brew update && brew install llvm && CC=clang-7.0 && CXX=clang++-7.0"
        - CXX=clang++-7
        - LINKER_FLAGS="-stdlib=libc++ -lc++abi"
        - CXXFLAGS="-stdlib=libc++"
        - COMPILER_ID="clang"
        - CMAKE_CXX_COMPILER=${CXX}
        - CMAKE_C_COMPILER=${CC}
        - CMAKE_LINKER=${CXX}

  allow_failures:
    - name: ubuntu 14.04 - native gcc - python 2.6
    - name: ubuntu 14.04 - clang@3.9
    - name: ubuntu 14.04 - clang@7.0
    - name: macOS - clang@7.0


before_install:
  - travis_retry eval "${MATRIX_EVAL}"
  - pip install --user codecov
  - sudo pip install -r requirements.txt

install:
  #- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo softwareupdate -l                                                                          ;fi
  #- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then softwareupdate -i "Command Line Tools (macOS High Sierra version 10.13) for Xcode-10.1"         ;fi
  # CMake upgrade

  - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then wget --no-check-certificate https://cmake.org/files/v3.13/cmake-3.13.1-Darwin-x86_64.tar.gz   ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then tar -xzf cmake-3.13.1-Darwin-x86_64.tar.gz                                                    ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then export PATH=$PWD/cmake-3.13.1-Darwin-x86_64/CMake.app/Contents/bin:$PATH                      ;fi

  ###############################################################################################################################################

  - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$COMPILER_ID" == "gcc" ]]; then wget --no-check-certificate https://cmake.org/files/v3.13/cmake-3.13.1-Linux-x86_64.tar.gz    ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$COMPILER_ID" == "gcc" ]]; then tar -xzf cmake-3.13.1-Linux-x86_64.tar.gz                                                     ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$COMPILER_ID" == "gcc" ]]; then export PATH=$PWD/cmake-3.13.1-Linux-x86_64/bin:$PATH                                          ;fi

before_script:
  - mkdir build
  - cd build
  - if [[ "$COMPILER_ID" == "native-gcc" ]]; then cmake "-DCMAKE_BUILD_TYPE=Debug" "-DOMP=OFF" ..                                             ;fi
  - if [[ "$COMPILER_ID" == "gcc"        ]]; then cmake "-DCMAKE_BUILD_TYPE=Debug" "-DOMP=ON" ..                                              ;fi
  - if [[ "$COMPILER_ID" == "clang"      ]]; then cmake "-DCMAKE_BUILD_TYPE=Debug" "-DOMP=OFF" ..                                             ;fi

script:
  - cmake --build . --target install

after_success:
  - codecov --file coverage/lcov.info --disable search
